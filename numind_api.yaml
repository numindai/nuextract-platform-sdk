openapi: 3.1.0
info:
  title: NuMind Extraction Platform
  version: '1.0'
  description: "\n# Workflow for Using NuExtract API for Information Extraction\n\n\
    ## Creating and Managing Projects\n\nA **Project** in NuExtract 2.0 serves as\
    \ the **main entity** for organizing and managing an **information extraction\
    \ task**.\nIt provides a structured approach to processing and extracting data\
    \ from multiple documents using a **shared template**.\n\n1. **Create a Project**:\
    \ A project stores the template for information extraction and can optionally\
    \ include extraction examples to improve model performance.\n2. **Define a Template**:\
    \ The template specifies what information should be extracted from documents within\
    \ this project. If needed, a template can be derived from a free-form description\
    \ using the `/api/infer-template` endpoint.\n3. **Managing Project Examples**:\n\
    \   - Project examples (optional) help refine model accuracy and consistency.\n\
    \   - They serve as **ICL (In-Context Learning) examples** during inference and\
    \ represent tuples of (input, output).\n   - Only examples that match the current\
    \ project template are used in inference calls.\n   - Examples are managed via\
    \ the ***examples*** endpoints (CRUD operations), requiring a project ID.\n4.\
    \ **Storing Inference Playground Items**:\n   - Inference results can be stored\
    \ within the **project playground** without adding them as ICL examples.\n   -\
    \ This ensures that outputs are retained without affecting inference behavior\
    \ or increasing token usage.\n\n## Performing Inference\n\nInference can be conducted\
    \ on both **text and images**. If a file is in another format, it is **automatically\
    \ converted to an image** in the background when possible. The inference response\
    \ includes a `docId`, which should be used when managing project examples. For\
    \ non-text/image files, only their converted image equivalents are accessible\
    \ via `docId`.\n\nInference **temperature** can be set in the project settings.\
    \ It controls variability in extraction inference responses.\n**RasterizationDpi**\
    \ sets the dots per inch resolution when converting non-text files to images.\
    \ Allowed range is (0, 300]\n\n## Locking a Project\n\nThe **locking mechanism**\
    \ allows you to prevent accidental modifications while still permitting inference.\
    \ When locked:\n- The **template and project examples** cannot be modified.\n\
    - Project settings such as **temperature** and **rasterizationDpi** are also restricted.\n\
    - Users can still perform inference and work with project playground.\n- This\
    \ feature is useful in **production environments** to maintain consistency.\n\n\
    ## Project Ownership and Permissions\n\nA project is owned by either a **user**\
    \ (`ownerUser`) or an **organization** (`ownerOrganization`). If a user leaves\
    \ an organization, they lose access to its resources, even if they originally\
    \ created them.\n\n## Additional Features\n\n- **Duplication**: Projects can be\
    \ **copied**, including examples but **excluding playground**.\n- **Deletion**:\
    \ Removing a project **deletes all associated examples and playground items**.\n\
    - **Sharing**: Projects can be shared with the community â€” in other words, they\
    \ can be designated as **reference projects**. Sharing and unsharing require **Numind\
    \ administrator access rights**.\n- **Reference Projects**: These are **static,\
    \ predefined projects** created by the Numind team to serve as examples of extraction\
    \ tasks. The inference is allowed for all users. However, reference projects cannot\
    \ be modified but can be **copied**, allowing users to make changes to their duplicates.\n\
    \nBy structuring projects efficiently, leveraging examples, and using locking\
    \ mechanisms, users can ensure **accurate, reproducible, and well-managed** information\
    \ extraction workflows in NuExtract 2.0.\n  "
servers:
- url: https://nuextract.ai
- url: http://localhost:9000
paths:
  /api/ping:
    get:
      operationId: getApiPing
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/health:
    get:
      operationId: getApiHealth
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/version:
    get:
      operationId: getApiVersion
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/auth:
    get:
      tags:
      - authentication
      operationId: getApiAuth
      parameters:
      - name: redirectUri
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: 'Invalid value for: query parameter redirectUri'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/auth/me:
    get:
      tags:
      - authentication
      operationId: getApiAuthMe
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/auth/token:
    post:
      tags:
      - authentication
      operationId: postApiAuthToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
            examples:
              Example0:
                value:
                  type: ai.numind.extract.shared.TokenCodeRequest
                  code: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SbXT6e7R0N1hVeJHtTh2uFd7y8Rg-Vu0oiL4T1jbAY0
                  redirectUri: http://localhost:5173
              Example1:
                value:
                  type: ai.numind.extract.shared.TokenRefreshRequest
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SbXT6e7R0N1hVeJHtTh2uFd7y8Rg-Vu0oiL4T1jbAY0
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/auth/logout:
    post:
      tags:
      - authentication
      operationId: postApiAuthLogout
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/auth/api-keys:
    get:
      tags:
      - authentication
      operationId: getApiAuthApi-keys
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiKeyResponse'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
    post:
      tags:
      - authentication
      operationId: postApiAuthApi-keys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateApiKey'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/auth/api-keys/{apiKeyId}:
    put:
      tags:
      - authentication
      operationId: putApiAuthApi-keysApikeyid
      parameters:
      - name: apiKeyId
        in: path
        description: Unique api key identifier.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateApiKey'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
    delete:
      tags:
      - authentication
      operationId: deleteApiAuthApi-keysApikeyid
      parameters:
      - name: apiKeyId
        in: path
        description: Unique api key identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects:
    get:
      tags:
      - projects
      description: "\nRetrieves a list of projects accessible to the authenticated\
        \ user.\n\n#### Error Responses:\n`403 Forbidden` - If the user attempts to\
        \ access an unauthorized organization.\n  "
      operationId: getApiProjects
      parameters:
      - name: organizationId
        in: query
        description: "Optional organization identifier.  \n  If provided, only projects\
          \ owned by this organization are returned.  \n  This parameter is ignored\
          \ if ***shared=true***."
        required: false
        schema:
          type: string
      - name: shared
        in: query
        description: "If **true**, only reference projects (shared projects) are returned.\
          \  \n  If **false**, only non-reference projects are returned."
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponse'
              example:
              - id: 081b65b6-3f9c-4691-8929-e360dc459def
                name: 'Example: Order Delivery Information Extraction'
                description: 'Example: Automated extraction of order delivery details
                  from emails and scanned documents'
                template:
                  type: schema
                  schema:
                    orderId: verbatim-string
                    customerId: verbatim-string
                    orderDate: date-time
                    status:
                    - pending
                    - processed
                    - shipped
                    - delivered
                    - cancelled
                    totalAmount: number
                    currency: string
                    items:
                    - productId: string
                      quantity: number
                      unitPrice: number
                    shippingAddress:
                      street: string
                      city: string
                      state: string
                      country: string
                      zip: string
                    comments: string
                    deliveryPreferences:
                    - - contactless_delivery
                      - signature_required
                      - leave_at_door
                      - pickup_from_store
                      - deliver_to_neighbor
                      - schedule_delivery
                    estimatedDelivery: date-time
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
                lockState: false
                shared: false
                settings:
                  temperature: 0
                  rasterizationDpi: 115
        '400':
          description: 'Invalid value for: query parameter shared'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
    post:
      tags:
      - projects
      description: "\nCreates a new project to organize an information extraction\
        \ task.\n\n#### Effect:\nA project is created with default settings:\n\n Parameter\
        \ | Default |\n-----------|---------|\n `temperature` | 0.0 |\n `rasterizationDpi`\
        \ | 115 |\n\n\nIf *ownerOrganization* is not provided, the project will be\
        \ owned by the authenticated user.\nWhen created, a project is not locked\
        \ and is owned by the authenticated user and the organization (if specified\
        \ in the request).\n\n#### Response:\n The response contains `projectId`,\
        \ which\n is required to modify the project, perform CRUD operations on project\
        \ examples and\n project playground items, and run inference for this project.\
        \ \n  "
      operationId: postApiProjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
            example:
              name: 'Example: Order Delivery Information Extraction'
              description: 'Example: Automated extraction of order delivery details
                from emails and scanned documents'
              template:
                orderId: verbatim-string
                customerId: verbatim-string
                orderDate: date-time
                status:
                - pending
                - processed
                - shipped
                - delivered
                - cancelled
                totalAmount: number
                currency: string
                items:
                - productId: string
                  quantity: number
                  unitPrice: number
                shippingAddress:
                  street: string
                  city: string
                  state: string
                  country: string
                  zip: string
                comments: string
                deliveryPreferences:
                - - contactless_delivery
                  - signature_required
                  - leave_at_door
                  - pickup_from_store
                  - deliver_to_neighbor
                  - schedule_delivery
                estimatedDelivery: date-time
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              example:
                id: 081b65b6-3f9c-4691-8929-e360dc459def
                name: 'Example: Order Delivery Information Extraction'
                description: 'Example: Automated extraction of order delivery details
                  from emails and scanned documents'
                template:
                  type: schema
                  schema:
                    orderId: verbatim-string
                    customerId: verbatim-string
                    orderDate: date-time
                    status:
                    - pending
                    - processed
                    - shipped
                    - delivered
                    - cancelled
                    totalAmount: number
                    currency: string
                    items:
                    - productId: string
                      quantity: number
                      unitPrice: number
                    shippingAddress:
                      street: string
                      city: string
                      state: string
                      country: string
                      zip: string
                    comments: string
                    deliveryPreferences:
                    - - contactless_delivery
                      - signature_required
                      - leave_at_door
                      - pickup_from_store
                      - deliver_to_neighbor
                      - schedule_delivery
                    estimatedDelivery: date-time
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
                lockState: false
                shared: false
                settings:
                  temperature: 0
                  rasterizationDpi: 115
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}:
    get:
      tags:
      - projects
      description: "\nFetches the details of a specific project.\n\n\n#### Error Responses:\n\
        `404 Not Found` - If a project with the specified projectId does not exist.\n\
        \n`403 Forbidden` - If the user does not have permission to view this project.\n\
        \  "
      operationId: getApiProjectsProjectid
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              example:
                id: 081b65b6-3f9c-4691-8929-e360dc459def
                name: 'Example: Order Delivery Information Extraction'
                description: 'Example: Automated extraction of order delivery details
                  from emails and scanned documents'
                template:
                  type: schema
                  schema:
                    orderId: verbatim-string
                    customerId: verbatim-string
                    orderDate: date-time
                    status:
                    - pending
                    - processed
                    - shipped
                    - delivered
                    - cancelled
                    totalAmount: number
                    currency: string
                    items:
                    - productId: string
                      quantity: number
                      unitPrice: number
                    shippingAddress:
                      street: string
                      city: string
                      state: string
                      country: string
                      zip: string
                    comments: string
                    deliveryPreferences:
                    - - contactless_delivery
                      - signature_required
                      - leave_at_door
                      - pickup_from_store
                      - deliver_to_neighbor
                      - schedule_delivery
                    estimatedDelivery: date-time
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
                lockState: false
                shared: false
                settings:
                  temperature: 0
                  rasterizationDpi: 115
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
    delete:
      tags:
      - projects
      description: "\nPermanently removes a project and all related data.\n\n\n####\
        \ Effect:\nDeletes the project together with the associated examples and playground\
        \ items.\n\n\n#### Error Responses:\n`404 Not Found` - If a project with the\
        \ specified projectId does not exist.\n\n`403 Forbidden` - If the user does\
        \ not have permission to delete this project.\n\n`403 Locked` - If the project\
        \ is locked.\n  "
      operationId: deleteApiProjectsProjectid
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
    patch:
      tags:
      - projects
      description: "\nUpdates the details of an existing unlocked project.\n\n\nNote\
        \ that you cannot change the lock or shared status via this endpoint.\nTo\
        \ modify these states, use the lock/unlock and share/unshare project endpoints.\n\
        \n#### Error Responses:\n`404 Not Found` - If a project with the specified\
        \ projectId does not exist.\n\n`403 Forbidden` - If the user does not have\
        \ permission to update this project.\n\n`403 Locked` - If the project is locked.\n\
        \  "
      operationId: patchApiProjectsProjectid
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
            examples:
              Update Template:
                value:
                  template:
                    orderId: verbatim-string
                    customerId: verbatim-string
                    orderDate: date-time
                    status:
                    - pending
                    - processed
                    - shipped
                    - delivered
                    - cancelled
                    totalAmount: number
                    currency: string
                    items:
                    - productId: string
                      quantity: number
                      unitPrice: number
                    shippingAddress:
                      street: string
                      city: string
                      state: string
                      country: string
                      zip: string
                    comments: string
                    deliveryPreferences:
                    - - contactless_delivery
                      - signature_required
                      - leave_at_door
                      - pickup_from_store
                      - deliver_to_neighbor
                      - schedule_delivery
                    estimatedDelivery: date-time
              Update Project Name:
                value:
                  name: 'Example: Order Delivery Information Extraction'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              example:
                id: 081b65b6-3f9c-4691-8929-e360dc459def
                name: 'Example: Order Delivery Information Extraction'
                description: 'Example: Automated extraction of order delivery details
                  from emails and scanned documents'
                template:
                  type: schema
                  schema:
                    orderId: verbatim-string
                    customerId: verbatim-string
                    orderDate: date-time
                    status:
                    - pending
                    - processed
                    - shipped
                    - delivered
                    - cancelled
                    totalAmount: number
                    currency: string
                    items:
                    - productId: string
                      quantity: number
                      unitPrice: number
                    shippingAddress:
                      street: string
                      city: string
                      state: string
                      country: string
                      zip: string
                    comments: string
                    deliveryPreferences:
                    - - contactless_delivery
                      - signature_required
                      - leave_at_door
                      - pickup_from_store
                      - deliver_to_neighbor
                      - schedule_delivery
                    estimatedDelivery: date-time
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
                lockState: false
                shared: false
                settings:
                  temperature: 0
                  rasterizationDpi: 115
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/settings:
    patch:
      tags:
      - projects
      description: "\nUpdates the settings of an existing unlocked project.\n\n\n\
        #### Error Responses:\n`404 Not Found` - If a project with the specified projectId\
        \ does not exist.\n\n`403 Forbidden` - If the user does not have permission\
        \ to update this project.\n\n`403 Locked` - If the project is locked.\n  "
      operationId: patchApiProjectsProjectidSettings
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectSettingsRequest'
            example:
              temperature: 0
              rasterizationDpi: 115
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              example:
                id: 081b65b6-3f9c-4691-8929-e360dc459def
                name: 'Example: Order Delivery Information Extraction'
                description: 'Example: Automated extraction of order delivery details
                  from emails and scanned documents'
                template:
                  type: schema
                  schema:
                    orderId: verbatim-string
                    customerId: verbatim-string
                    orderDate: date-time
                    status:
                    - pending
                    - processed
                    - shipped
                    - delivered
                    - cancelled
                    totalAmount: number
                    currency: string
                    items:
                    - productId: string
                      quantity: number
                      unitPrice: number
                    shippingAddress:
                      street: string
                      city: string
                      state: string
                      country: string
                      zip: string
                    comments: string
                    deliveryPreferences:
                    - - contactless_delivery
                      - signature_required
                      - leave_at_door
                      - pickup_from_store
                      - deliver_to_neighbor
                      - schedule_delivery
                    estimatedDelivery: date-time
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
                lockState: false
                shared: false
                settings:
                  temperature: 0
                  rasterizationDpi: 115
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/reset-settings:
    post:
      tags:
      - projects
      description: "\nResets the settings of an existing unlocked project to their\
        \ default values.\n\nDefault values are:\n\n Parameter | Default |\n-----------|---------|\n\
        \ `temperature` | 0.0 |\n `rasterizationDpi` | 115 |\n\n#### Error Responses:\n\
        `404 Not Found` - If a project with the specified projectId does not exist.\n\
        \n`403 Forbidden` - If the user does not have permission to update this project.\n\
        \n`403 Locked` - If the project is locked.\n  "
      operationId: postApiProjectsProjectidReset-settings
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              example:
                id: 081b65b6-3f9c-4691-8929-e360dc459def
                name: 'Example: Order Delivery Information Extraction'
                description: 'Example: Automated extraction of order delivery details
                  from emails and scanned documents'
                template:
                  type: schema
                  schema:
                    orderId: verbatim-string
                    customerId: verbatim-string
                    orderDate: date-time
                    status:
                    - pending
                    - processed
                    - shipped
                    - delivered
                    - cancelled
                    totalAmount: number
                    currency: string
                    items:
                    - productId: string
                      quantity: number
                      unitPrice: number
                    shippingAddress:
                      street: string
                      city: string
                      state: string
                      country: string
                      zip: string
                    comments: string
                    deliveryPreferences:
                    - - contactless_delivery
                      - signature_required
                      - leave_at_door
                      - pickup_from_store
                      - deliver_to_neighbor
                      - schedule_delivery
                    estimatedDelivery: date-time
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
                lockState: false
                shared: false
                settings:
                  temperature: 0
                  rasterizationDpi: 115
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/duplicate:
    post:
      tags:
      - projects
      description: |
        Creates a copy of an existing project.

        It is allowed to duplicate locked projects and reference projects.


        #### Effect:
        - The duplicated project retains the **same template, settings and examples**.
        - A new name is assigned ("Original Name (copy)").
        - Project playground is not duplicated.

        #### Response:
         The response contains a newly generated
         `projectId`. When duplicated, a new project is always unlocked. The duplicated reference projects
         are private and owned by the authenticated user.

        #### Error Responses:
        `404 Not Found` - If a project with the specified projectId does not exist.

        `403 Forbidden` - If the user does not have permission to duplicate this project.
      operationId: postApiProjectsProjectidDuplicate
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              example:
                id: 081b65b6-3f9c-4691-8929-e360dc459def
                name: 'Example: Order Delivery Information Extraction'
                description: 'Example: Automated extraction of order delivery details
                  from emails and scanned documents'
                template:
                  type: schema
                  schema:
                    orderId: verbatim-string
                    customerId: verbatim-string
                    orderDate: date-time
                    status:
                    - pending
                    - processed
                    - shipped
                    - delivered
                    - cancelled
                    totalAmount: number
                    currency: string
                    items:
                    - productId: string
                      quantity: number
                      unitPrice: number
                    shippingAddress:
                      street: string
                      city: string
                      state: string
                      country: string
                      zip: string
                    comments: string
                    deliveryPreferences:
                    - - contactless_delivery
                      - signature_required
                      - leave_at_door
                      - pickup_from_store
                      - deliver_to_neighbor
                      - schedule_delivery
                    estimatedDelivery: date-time
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
                lockState: false
                shared: false
                settings:
                  temperature: 0
                  rasterizationDpi: 115
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/share:
    post:
      tags:
      - projects
      description: |
        Shares a project with other users.

         This endpoint turns an existing project into a reference project.
         Only NuMind administrators can share a project with other users.
         Lock state does not prevent sharing. Likewise, sharing does not change the lock state.

        #### Effect:

        - Reference projects are shared with the community (read access is granted to all users).
        - Project examples and playground items are shared as well.
        - Only NuMind administrators can update or delete reference projects.
        - Only NuMind administrators can create, update, or delete reference project examples and playground items.
        - The inference is allowed for all users.

        #### Error Responses:

        `404 Not Found` - If a project with the specified projectId does not exist.

        `403 Forbidden` - If the user does not have permission to share projects (not NuMind admin).
      operationId: postApiProjectsProjectidShare
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/unshare:
    post:
      tags:
      - projects
      description: |2

        Unshares a reference project (makes it private).

         Lock state does not prevent unsharing. Likewise, unsharing does not change the lock state.
         The project owner is the initial owner, not the authenicated user.


        #### Effect:
        - The project is no longer a reference project and is no longer shared with the community.
        - Read access is revoked for all users except the project owner.
        - Project examples and playground are no longer publicly accessible.
        - Only the project owner can manage or delete the project after unsharing.
        - Inference is restricted to the project owner.

        #### Error Responses:
        `404 Not Found` - If a project with the specified projectId does not exist.

        `403 Forbidden` - If the user does not have permission to unshare projects (not NuMind admin).
      operationId: postApiProjectsProjectidUnshare
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/lock:
    post:
      tags:
      - projects
      description: |
        Locks a project to prevent modifications.


        #### Effect:
        - While locked, the project **cannot be updated or deleted**. Read access is still available.
        - CRUD operations on project examples are not allowed.
        - Inference is still allowed.
        - CRUD access to project playground items is still available.

        #### Error Responses:
         `404 Not Found` - If a project with the specified projectId does not exist.

         `403 Forbidden` - If the user does not have permission to lock this project.
      operationId: postApiProjectsProjectidLock
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/unlock:
    post:
      tags:
      - projects
      description: |
        Unlocks a previously locked project.

        #### Effect:
        - Once unlocked, the project **can be updated or deleted**.
        - Full CRUD access to project examples is restored.

        #### Error Responses:
        `404 Not Found` - If a project with the specified projectId does not exist.

        `403 Forbidden` - If the user does not have permission to unlock this project.
      operationId: postApiProjectsProjectidUnlock
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/examples:
    get:
      tags:
      - examples
      description: "\nRetrieves a list of examples associated to the specified project.\n\
        \n#### Error Responses:\n`404 Not Found` - If a project with the specified\
        \ projectId does not exist.\n\n`403 Forbidden` - If the user does not have\
        \ permission to view this project.\n  "
      operationId: getApiProjectsProjectidExamples
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExampleResponse'
              example:
              - id: 5b9367b3-574a-40e3-9773-e1026340d6e0
                projectId: 081b65b6-3f9c-4691-8929-e360dc459def
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                documentInfo:
                  type: text
                  documentId: c944341c-dcde-42b7-a815-503fdc28cd57
                  fileName: dummy_example_confirmation_email.txt
                  text: '[EXAMPLE ONLY] Your order (ID: o-67214) has been successfully
                    processed. The customer ID for this order is c-76549. It was placed
                    on April 5, 2024, at 8:20 AM UTC and is now marked as pending.
                    The total amount charged is $89.75 USD. The items in this order
                    include: Product ID p-00567 with a quantity of 1 at a unit price
                    of $89.75. The shipping address is 123 Elm St, Boston, MA, 02108,
                    USA. The customer has requested: "Hold at pickup location". Additional
                    delivery preferences include scheduled delivery and contactless
                    delivery. The estimated delivery date is April 10, 2024, by 7:00
                    PM UTC.'
                result:
                  type: information
                  information:
                    orderId: 'Example: o-67214'
                    customerId: 'Example: c-76549'
                    orderDate: '2024-04-05T08:20:00.000Z'
                    status: pending
                    totalAmount: 89.75
                    currency: USD
                    items:
                    - productId: p-00567
                      quantity: 1
                      unitPrice: 89.75
                    shippingAddress:
                      street: 123 Elm St
                      city: Boston
                      state: MA
                      country: USA
                      zip: '02108'
                    comments: Hold at pickup location.
                    deliveryPreferences:
                    - scheduled_delivery
                    - contactless_delivery
                    estimatedDelivery: '2024-04-10T19:00:00.000Z'
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
    post:
      tags:
      - examples
      description: "\nCreates a new project example associated with a specific project.\n\
        An example consists of an (input, output) pair, where the input is identified\
        \ by a `documentId`, and the output represents the expected inference result.\n\
        To obtain a documentId, use the endpoints under the ***documents*** tag.\n\
        Once created, this example will be automatically applied to subsequent inference\
        \ calls as ICL (In-Context Learning) exampleâ€”unless the output no longer aligns\
        \ with the current template.\nIn such cases, the example will be skipped.\n\
        \n\n\n#### Effect:\n If the project is shared, the document used to create\
        \ this example will be automatically shared for read access to all users.\n\
        \n#### Response:\n The response contains `exampleId`, which\n is required\
        \ to update or delete this example.\n\n#### Error Responses:\n`404 Not Found`\
        \ - If a project with the specified projectId does not exist or a document\
        \ with the specified documentId does not exist.\n\n`403 Forbidden` - If the\
        \ user does not have permission to update this project or use the specified\
        \ document.\n\n`403 Locked` - If the project is locked.\n  "
      operationId: postApiProjectsProjectidExamples
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateExampleRequest'
            example:
              documentId: c944341c-dcde-42b7-a815-503fdc28cd57
              result:
                orderId: 'Example: o-67214'
                customerId: 'Example: c-76549'
                orderDate: '2024-04-05T08:20:00.000Z'
                status: pending
                totalAmount: 89.75
                currency: USD
                items:
                - productId: p-00567
                  quantity: 1
                  unitPrice: 89.75
                shippingAddress:
                  street: 123 Elm St
                  city: Boston
                  state: MA
                  country: USA
                  zip: '02108'
                comments: Hold at pickup location.
                deliveryPreferences:
                - scheduled_delivery
                - contactless_delivery
                estimatedDelivery: '2024-04-10T19:00:00.000Z'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleResponse'
              example:
                id: 5b9367b3-574a-40e3-9773-e1026340d6e0
                projectId: 081b65b6-3f9c-4691-8929-e360dc459def
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                documentInfo:
                  type: text
                  documentId: c944341c-dcde-42b7-a815-503fdc28cd57
                  fileName: dummy_example_confirmation_email.txt
                  text: '[EXAMPLE ONLY] Your order (ID: o-67214) has been successfully
                    processed. The customer ID for this order is c-76549. It was placed
                    on April 5, 2024, at 8:20 AM UTC and is now marked as pending.
                    The total amount charged is $89.75 USD. The items in this order
                    include: Product ID p-00567 with a quantity of 1 at a unit price
                    of $89.75. The shipping address is 123 Elm St, Boston, MA, 02108,
                    USA. The customer has requested: "Hold at pickup location". Additional
                    delivery preferences include scheduled delivery and contactless
                    delivery. The estimated delivery date is April 10, 2024, by 7:00
                    PM UTC.'
                result:
                  type: information
                  information:
                    orderId: 'Example: o-67214'
                    customerId: 'Example: c-76549'
                    orderDate: '2024-04-05T08:20:00.000Z'
                    status: pending
                    totalAmount: 89.75
                    currency: USD
                    items:
                    - productId: p-00567
                      quantity: 1
                      unitPrice: 89.75
                    shippingAddress:
                      street: 123 Elm St
                      city: Boston
                      state: MA
                      country: USA
                      zip: '02108'
                    comments: Hold at pickup location.
                    deliveryPreferences:
                    - scheduled_delivery
                    - contactless_delivery
                    estimatedDelivery: '2024-04-10T19:00:00.000Z'
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/examples/{exampleId}:
    get:
      tags:
      - examples
      description: "\nRetrieves a specific project example.\n\n#### Error Responses:\n\
        `404 Not Found` - If an example with the specified exampleId associated with\
        \ the given projectId does not exist.\n\n`403 Forbidden` - If the user does\
        \ not have permission to view this project.\n  "
      operationId: getApiProjectsProjectidExamplesExampleid
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      - name: exampleId
        in: path
        description: Unique example identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleResponse'
              example:
                id: 5b9367b3-574a-40e3-9773-e1026340d6e0
                projectId: 081b65b6-3f9c-4691-8929-e360dc459def
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                documentInfo:
                  type: text
                  documentId: c944341c-dcde-42b7-a815-503fdc28cd57
                  fileName: dummy_example_confirmation_email.txt
                  text: '[EXAMPLE ONLY] Your order (ID: o-67214) has been successfully
                    processed. The customer ID for this order is c-76549. It was placed
                    on April 5, 2024, at 8:20 AM UTC and is now marked as pending.
                    The total amount charged is $89.75 USD. The items in this order
                    include: Product ID p-00567 with a quantity of 1 at a unit price
                    of $89.75. The shipping address is 123 Elm St, Boston, MA, 02108,
                    USA. The customer has requested: "Hold at pickup location". Additional
                    delivery preferences include scheduled delivery and contactless
                    delivery. The estimated delivery date is April 10, 2024, by 7:00
                    PM UTC.'
                result:
                  type: information
                  information:
                    orderId: 'Example: o-67214'
                    customerId: 'Example: c-76549'
                    orderDate: '2024-04-05T08:20:00.000Z'
                    status: pending
                    totalAmount: 89.75
                    currency: USD
                    items:
                    - productId: p-00567
                      quantity: 1
                      unitPrice: 89.75
                    shippingAddress:
                      street: 123 Elm St
                      city: Boston
                      state: MA
                      country: USA
                      zip: '02108'
                    comments: Hold at pickup location.
                    deliveryPreferences:
                    - scheduled_delivery
                    - contactless_delivery
                    estimatedDelivery: '2024-04-10T19:00:00.000Z'
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
    put:
      tags:
      - examples
      description: "\nUpdates a specific project example.\n\n#### Error Responses:\n\
        `404 Not Found` - If an example with the specified exampleId associated with\
        \ the given projectId does not exist, or if a document with the specified\
        \ documentId cannot be found.\n\n`403 Forbidden` - If the user does not have\
        \ permission to update this project or use the specified document.\n\n`403\
        \ Locked` - If the project is locked.\n  "
      operationId: putApiProjectsProjectidExamplesExampleid
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      - name: exampleId
        in: path
        description: Unique example identifier.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateExampleRequest'
            example:
              documentId: c944341c-dcde-42b7-a815-503fdc28cd57
              result:
                orderId: 'Example: o-67214'
                customerId: 'Example: c-76549'
                orderDate: '2024-04-05T08:20:00.000Z'
                status: pending
                totalAmount: 89.75
                currency: USD
                items:
                - productId: p-00567
                  quantity: 1
                  unitPrice: 89.75
                shippingAddress:
                  street: 123 Elm St
                  city: Boston
                  state: MA
                  country: USA
                  zip: '02108'
                comments: Hold at pickup location.
                deliveryPreferences:
                - scheduled_delivery
                - contactless_delivery
                estimatedDelivery: '2024-04-10T19:00:00.000Z'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleResponse'
              example:
                id: 5b9367b3-574a-40e3-9773-e1026340d6e0
                projectId: 081b65b6-3f9c-4691-8929-e360dc459def
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                documentInfo:
                  type: text
                  documentId: c944341c-dcde-42b7-a815-503fdc28cd57
                  fileName: dummy_example_confirmation_email.txt
                  text: '[EXAMPLE ONLY] Your order (ID: o-67214) has been successfully
                    processed. The customer ID for this order is c-76549. It was placed
                    on April 5, 2024, at 8:20 AM UTC and is now marked as pending.
                    The total amount charged is $89.75 USD. The items in this order
                    include: Product ID p-00567 with a quantity of 1 at a unit price
                    of $89.75. The shipping address is 123 Elm St, Boston, MA, 02108,
                    USA. The customer has requested: "Hold at pickup location". Additional
                    delivery preferences include scheduled delivery and contactless
                    delivery. The estimated delivery date is April 10, 2024, by 7:00
                    PM UTC.'
                result:
                  type: information
                  information:
                    orderId: 'Example: o-67214'
                    customerId: 'Example: c-76549'
                    orderDate: '2024-04-05T08:20:00.000Z'
                    status: pending
                    totalAmount: 89.75
                    currency: USD
                    items:
                    - productId: p-00567
                      quantity: 1
                      unitPrice: 89.75
                    shippingAddress:
                      street: 123 Elm St
                      city: Boston
                      state: MA
                      country: USA
                      zip: '02108'
                    comments: Hold at pickup location.
                    deliveryPreferences:
                    - scheduled_delivery
                    - contactless_delivery
                    estimatedDelivery: '2024-04-10T19:00:00.000Z'
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
    delete:
      tags:
      - examples
      description: "\nDeletes a specific project example.\n\n#### Error Responses:\n\
        `404 Not Found` - If an example with the specified exampleId associated with\
        \ the given projectId does not exist.\n\n`403 Forbidden` - If the user does\
        \ not have permission to update this project.\n\n`403 Locked` - If the project\
        \ is locked.\n  "
      operationId: deleteApiProjectsProjectidExamplesExampleid
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      - name: exampleId
        in: path
        description: Unique example identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/playground:
    get:
      tags:
      - playground
      description: "\nRetrieves a list of playground items associated to the specified\
        \ project.\n\n#### Error Responses:\n`404 Not Found` - If a project with the\
        \ specified projectId does not exist.\n\n`403 Forbidden` - If the user does\
        \ not have permission to view this project.\n  "
      operationId: getApiProjectsProjectidPlayground
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaygroundItemResponse'
              example:
              - id: 60232dca-afa2-43c5-95bc-d02730d6a94d
                projectId: 081b65b6-3f9c-4691-8929-e360dc459def
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                documentInfo:
                  type: text
                  documentId: 7285756f-3cb1-4986-a501-229744fd24d1
                  fileName: dummy_confirmation_email.txt
                  text: '[EXAMPLE ONLY] Your order (ID: o-89123) has been successfully
                    processed. The customer ID for this order is c-20485. It was placed
                    on March 10, 2024, at 11:15 AM UTC and is now marked as shipped.
                    The total amount charged is $149.99 USD. The items in this order
                    include: Product ID p-00876 with a quantity of 1 at a unit price
                    of $79.99, and Product ID p-00321 with a quantity of 2 at a unit
                    price of $35.00. The shipping address is 782 Pine St, Austin,
                    TX, 73301, USA. The customer has requested: "Leave package at
                    the front door." Additional delivery preferences include no signature
                    required and standard delivery. The estimated delivery date is
                    March 15, 2024, by 5:00 PM UTC.'
                result:
                  type: information
                  information:
                    orderId: 'Example: o-89123'
                    customerId: 'Example: c-20485'
                    orderDate: '2024-03-10T11:15:00.000Z'
                    status: shipped
                    totalAmount: 149.99
                    currency: USD
                    items:
                    - productId: p-00876
                      quantity: 1
                      unitPrice: 79.99
                    - productId: p-00321
                      quantity: 2
                      unitPrice: 35
                    shippingAddress:
                      street: 782 Pine St
                      city: Austin
                      state: TX
                      country: USA
                      zip: '73301'
                    comments: Leave package at the front door.
                    deliveryPreferences:
                    - no_signature_required
                    - standard_delivery
                    estimatedDelivery: '2024-03-15T17:00:00.000Z'
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
    post:
      tags:
      - playground
      description: "\nCreates a new playground item associated to the specified project.\n\
        \n#### Error Responses:\n`404 Not Found` - If a project with the specified\
        \ projectId does not exist or a document with the specified documentId does\
        \ not exist.\n\n`403 Forbidden` - If the user does not have permission to\
        \ update this project or use the specified document.\n  "
      operationId: postApiProjectsProjectidPlayground
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdatePlaygroundItemRequest'
            example:
              documentId: 7285756f-3cb1-4986-a501-229744fd24d1
              result:
                orderId: 'Example: o-89123'
                customerId: 'Example: c-20485'
                orderDate: '2024-03-10T11:15:00.000Z'
                status: shipped
                totalAmount: 149.99
                currency: USD
                items:
                - productId: p-00876
                  quantity: 1
                  unitPrice: 79.99
                - productId: p-00321
                  quantity: 2
                  unitPrice: 35
                shippingAddress:
                  street: 782 Pine St
                  city: Austin
                  state: TX
                  country: USA
                  zip: '73301'
                comments: Leave package at the front door.
                deliveryPreferences:
                - no_signature_required
                - standard_delivery
                estimatedDelivery: '2024-03-15T17:00:00.000Z'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaygroundItemResponse'
              example:
                id: 60232dca-afa2-43c5-95bc-d02730d6a94d
                projectId: 081b65b6-3f9c-4691-8929-e360dc459def
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                documentInfo:
                  type: text
                  documentId: 7285756f-3cb1-4986-a501-229744fd24d1
                  fileName: dummy_confirmation_email.txt
                  text: '[EXAMPLE ONLY] Your order (ID: o-89123) has been successfully
                    processed. The customer ID for this order is c-20485. It was placed
                    on March 10, 2024, at 11:15 AM UTC and is now marked as shipped.
                    The total amount charged is $149.99 USD. The items in this order
                    include: Product ID p-00876 with a quantity of 1 at a unit price
                    of $79.99, and Product ID p-00321 with a quantity of 2 at a unit
                    price of $35.00. The shipping address is 782 Pine St, Austin,
                    TX, 73301, USA. The customer has requested: "Leave package at
                    the front door." Additional delivery preferences include no signature
                    required and standard delivery. The estimated delivery date is
                    March 15, 2024, by 5:00 PM UTC.'
                result:
                  type: information
                  information:
                    orderId: 'Example: o-89123'
                    customerId: 'Example: c-20485'
                    orderDate: '2024-03-10T11:15:00.000Z'
                    status: shipped
                    totalAmount: 149.99
                    currency: USD
                    items:
                    - productId: p-00876
                      quantity: 1
                      unitPrice: 79.99
                    - productId: p-00321
                      quantity: 2
                      unitPrice: 35
                    shippingAddress:
                      street: 782 Pine St
                      city: Austin
                      state: TX
                      country: USA
                      zip: '73301'
                    comments: Leave package at the front door.
                    deliveryPreferences:
                    - no_signature_required
                    - standard_delivery
                    estimatedDelivery: '2024-03-15T17:00:00.000Z'
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/playground/{playgroundItemId}:
    get:
      tags:
      - playground
      description: "\nRetrieves a specific playground item.\n\n#### Error Responses:\n\
        `404 Not Found` - If a playground item with the specified playgroundItemId\
        \ associated with the given projectId does not exist.\n\n`403 Forbidden` -\
        \ If the user does not have permission to view this project.\n  "
      operationId: getApiProjectsProjectidPlaygroundPlaygrounditemid
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      - name: playgroundItemId
        in: path
        description: Unique playground item identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaygroundItemResponse'
              example:
                id: 60232dca-afa2-43c5-95bc-d02730d6a94d
                projectId: 081b65b6-3f9c-4691-8929-e360dc459def
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                documentInfo:
                  type: text
                  documentId: 7285756f-3cb1-4986-a501-229744fd24d1
                  fileName: dummy_confirmation_email.txt
                  text: '[EXAMPLE ONLY] Your order (ID: o-89123) has been successfully
                    processed. The customer ID for this order is c-20485. It was placed
                    on March 10, 2024, at 11:15 AM UTC and is now marked as shipped.
                    The total amount charged is $149.99 USD. The items in this order
                    include: Product ID p-00876 with a quantity of 1 at a unit price
                    of $79.99, and Product ID p-00321 with a quantity of 2 at a unit
                    price of $35.00. The shipping address is 782 Pine St, Austin,
                    TX, 73301, USA. The customer has requested: "Leave package at
                    the front door." Additional delivery preferences include no signature
                    required and standard delivery. The estimated delivery date is
                    March 15, 2024, by 5:00 PM UTC.'
                result:
                  type: information
                  information:
                    orderId: 'Example: o-89123'
                    customerId: 'Example: c-20485'
                    orderDate: '2024-03-10T11:15:00.000Z'
                    status: shipped
                    totalAmount: 149.99
                    currency: USD
                    items:
                    - productId: p-00876
                      quantity: 1
                      unitPrice: 79.99
                    - productId: p-00321
                      quantity: 2
                      unitPrice: 35
                    shippingAddress:
                      street: 782 Pine St
                      city: Austin
                      state: TX
                      country: USA
                      zip: '73301'
                    comments: Leave package at the front door.
                    deliveryPreferences:
                    - no_signature_required
                    - standard_delivery
                    estimatedDelivery: '2024-03-15T17:00:00.000Z'
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
    put:
      tags:
      - playground
      description: "\nUpdates a specific playground item.\n\n#### Error Responses:\n\
        `404 Not Found` - If a playground item with the specified playgroundItemId\
        \ associated with the given projectId does not exist, or if a document with\
        \ the specified documentId cannot be found.\n\n`403 Forbidden` - If the user\
        \ does not have permission to update this project or use the specified document.\n\
        \  "
      operationId: putApiProjectsProjectidPlaygroundPlaygrounditemid
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      - name: playgroundItemId
        in: path
        description: Unique playground item identifier.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdatePlaygroundItemRequest'
            example:
              documentId: 7285756f-3cb1-4986-a501-229744fd24d1
              result:
                orderId: 'Example: o-89123'
                customerId: 'Example: c-20485'
                orderDate: '2024-03-10T11:15:00.000Z'
                status: shipped
                totalAmount: 149.99
                currency: USD
                items:
                - productId: p-00876
                  quantity: 1
                  unitPrice: 79.99
                - productId: p-00321
                  quantity: 2
                  unitPrice: 35
                shippingAddress:
                  street: 782 Pine St
                  city: Austin
                  state: TX
                  country: USA
                  zip: '73301'
                comments: Leave package at the front door.
                deliveryPreferences:
                - no_signature_required
                - standard_delivery
                estimatedDelivery: '2024-03-15T17:00:00.000Z'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaygroundItemResponse'
              example:
                id: 60232dca-afa2-43c5-95bc-d02730d6a94d
                projectId: 081b65b6-3f9c-4691-8929-e360dc459def
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                documentInfo:
                  type: text
                  documentId: 7285756f-3cb1-4986-a501-229744fd24d1
                  fileName: dummy_confirmation_email.txt
                  text: '[EXAMPLE ONLY] Your order (ID: o-89123) has been successfully
                    processed. The customer ID for this order is c-20485. It was placed
                    on March 10, 2024, at 11:15 AM UTC and is now marked as shipped.
                    The total amount charged is $149.99 USD. The items in this order
                    include: Product ID p-00876 with a quantity of 1 at a unit price
                    of $79.99, and Product ID p-00321 with a quantity of 2 at a unit
                    price of $35.00. The shipping address is 782 Pine St, Austin,
                    TX, 73301, USA. The customer has requested: "Leave package at
                    the front door." Additional delivery preferences include no signature
                    required and standard delivery. The estimated delivery date is
                    March 15, 2024, by 5:00 PM UTC.'
                result:
                  type: information
                  information:
                    orderId: 'Example: o-89123'
                    customerId: 'Example: c-20485'
                    orderDate: '2024-03-10T11:15:00.000Z'
                    status: shipped
                    totalAmount: 149.99
                    currency: USD
                    items:
                    - productId: p-00876
                      quantity: 1
                      unitPrice: 79.99
                    - productId: p-00321
                      quantity: 2
                      unitPrice: 35
                    shippingAddress:
                      street: 782 Pine St
                      city: Austin
                      state: TX
                      country: USA
                      zip: '73301'
                    comments: Leave package at the front door.
                    deliveryPreferences:
                    - no_signature_required
                    - standard_delivery
                    estimatedDelivery: '2024-03-15T17:00:00.000Z'
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
    delete:
      tags:
      - playground
      description: "\nDeletes a specific playground item.\n\n#### Error Responses:\n\
        `404 Not Found` - If a playground item with the specified playgroundItemId\
        \ associated with the given projectId does not exist.\n\n`403 Forbidden` -\
        \ If the user does not have permission to update this project.\n  "
      operationId: deleteApiProjectsProjectidPlaygroundPlaygrounditemid
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      - name: playgroundItemId
        in: path
        description: Unique playground item identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/documents/{documentId}:
    get:
      tags:
      - documents
      description: "\n Retrieves meta information about a specific document. \n For\
        \ text documents, this includes the text content.\n In order to access the\
        \ non-text document content, uset the endpoint `/api/documents/{documentId}/content`\n\
        \n#### Error Responses:\n`404 Not Found` - If a document with the specified\
        \ documentId does not exist.\n\n`403 Forbidden` - If the user does not have\
        \ permission to view this document.\n   "
      operationId: getApiDocumentsDocumentid
      parameters:
      - name: documentId
        in: path
        description: Unique document identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
              examples:
                Text Document:
                  value:
                    docInfo:
                      type: text
                      documentId: 7285756f-3cb1-4986-a501-229744fd24d1
                      fileName: dummy_confirmation_email.txt
                      text: '[EXAMPLE ONLY] Your order (ID: o-89123) has been successfully
                        processed. The customer ID for this order is c-20485. It was
                        placed on March 10, 2024, at 11:15 AM UTC and is now marked
                        as shipped. The total amount charged is $149.99 USD. The items
                        in this order include: Product ID p-00876 with a quantity
                        of 1 at a unit price of $79.99, and Product ID p-00321 with
                        a quantity of 2 at a unit price of $35.00. The shipping address
                        is 782 Pine St, Austin, TX, 73301, USA. The customer has requested:
                        "Leave package at the front door." Additional delivery preferences
                        include no signature required and standard delivery. The estimated
                        delivery date is March 15, 2024, by 5:00 PM UTC.'
                    ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                    originalContentType: text/plain
                    contentType: text/plain
                    createdAt: '2025-04-11T08:13:56.849893697Z'
                    updatedAt: '2025-04-11T08:13:56.849926437Z'
                    shared: false
                Image Document:
                  value:
                    docInfo:
                      type: image
                      documentId: 15eeb346-b822-4743-ac56-1a7669e8c66d
                      fileName: dummy_confirmation_email.pdf
                    ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                    originalContentType: application/pdf
                    contentType: image/png
                    createdAt: '2025-04-11T08:13:56.849893697Z'
                    updatedAt: '2025-04-11T08:13:56.849926437Z'
                    shared: false
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/documents/{documentId}/content:
    get:
      tags:
      - documents
      description: "\n Retrieves the content of a specific document.\n\n#### Error\
        \ Responses:\n`404 Not Found` - If a document with the specified documentId\
        \ does not exist.\n\n`403 Forbidden` - If the user does not have permission\
        \ to view this document.\n   "
      operationId: getApiDocumentsDocumentidContent
      parameters:
      - name: token
        in: query
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: Unique document identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              description: MIME type of document content
              required: true
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: 'Invalid value for: query parameter token'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/documents/text:
    post:
      tags:
      - documents
      description: "\n Save the text as a document. \n Once saved, this document can\
        \ be used to perform inference,\n create ICL (In-Context Learning) examples,\n\
        \ and/or save playground items with the text as input.\n \n In order to save\
        \ non-text files, use the `/api/documents/file` endpoint.\n\n\n#### Response:\n\
        \ The response contains a `documentId`, which is required in order to access\
        \ and use this document.\n   "
      operationId: postApiDocumentsText
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextRequest'
            example:
              text: '[EXAMPLE ONLY] Your order (ID: o-89123) has been successfully
                processed. The customer ID for this order is c-20485. It was placed
                on March 10, 2024, at 11:15 AM UTC and is now marked as shipped. The
                total amount charged is $149.99 USD. The items in this order include:
                Product ID p-00876 with a quantity of 1 at a unit price of $79.99,
                and Product ID p-00321 with a quantity of 2 at a unit price of $35.00.
                The shipping address is 782 Pine St, Austin, TX, 73301, USA. The customer
                has requested: "Leave package at the front door." Additional delivery
                preferences include no signature required and standard delivery. The
                estimated delivery date is March 15, 2024, by 5:00 PM UTC.'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
              example:
                docInfo:
                  type: text
                  documentId: 7285756f-3cb1-4986-a501-229744fd24d1
                  fileName: dummy_confirmation_email.txt
                  text: '[EXAMPLE ONLY] Your order (ID: o-89123) has been successfully
                    processed. The customer ID for this order is c-20485. It was placed
                    on March 10, 2024, at 11:15 AM UTC and is now marked as shipped.
                    The total amount charged is $149.99 USD. The items in this order
                    include: Product ID p-00876 with a quantity of 1 at a unit price
                    of $79.99, and Product ID p-00321 with a quantity of 2 at a unit
                    price of $35.00. The shipping address is 782 Pine St, Austin,
                    TX, 73301, USA. The customer has requested: "Leave package at
                    the front door." Additional delivery preferences include no signature
                    required and standard delivery. The estimated delivery date is
                    March 15, 2024, by 5:00 PM UTC.'
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                originalContentType: text/plain
                contentType: text/plain
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
                shared: false
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/documents/file:
    post:
      tags:
      - documents
      description: "\n Save the file as a document. \n\n Once saved, this document\
        \ can be used to perform inference,\n create ICL (In-Context Learning) examples,\n\
        \ and/or save playground items with the text as input.\n \n All non-image\
        \ files are automatically converted to an image in the background when possible.\n\
        \ For that, a parameter **rasterizationDpi** is taken into account. \n This\
        \ parameter can be set in the project settings.\n\n\n\n#### Response:\n The\
        \ response contains a `documentId`, which is required in order to access and\
        \ use this document.\n When referencing a non-text/image file by `documentId`,\
        \ only its converted image equivalents are accessible.\n\n#### Error Responses:\n\
        `404 Not Found` - If a project with the specified projectId does not exist.\n"
      operationId: postApiProjectsProjectidDocumentsFile
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      - name: x-file-name
        in: header
        description: The name of the file to be uploaded.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
              example:
                docInfo:
                  type: image
                  documentId: 15eeb346-b822-4743-ac56-1a7669e8c66d
                  fileName: dummy_confirmation_email.pdf
                ownerUser: c946753f-2299-4f08-aa9a-a638f1136995
                originalContentType: application/pdf
                contentType: image/png
                createdAt: '2025-04-11T08:13:56.849893697Z'
                updatedAt: '2025-04-11T08:13:56.849926437Z'
                shared: false
        '400':
          description: 'Invalid value for: header x-file-name, Invalid value for:
            body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/infer-text:
    post:
      tags:
      - inference
      description: "\n Performs information extraction inference on the provided text.\n\
        \ The text content must be compatible with the template of the project.\n\
        \ Inference **temperature** can be set in the project settings.\n\n\n####\
        \ Response:\n Returns a json representing the inference result.\n The ***result***\
        \ field is guaranteed to conform to the template.\n If the model returns an\
        \ invalid response, the ***result*** contains an empty template. \n In this\
        \ case, the raw response is additionally included in ***rawResponse*** field,\
        \ \n together with the error message. \n Additionally, the response contains\
        \ `documentId`, which allows to reuse this text document in the future.\n\n\
        #### Error Responses:\n`404 Not Found` - If  a project with the specified\
        \ projectId does not exist.\n\n`403 Forbidden` - If the user does not have\
        \ permission to run inference on this project.\n   "
      operationId: postApiProjectsProjectidInfer-text
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextRequest'
            example:
              text: '[EXAMPLE ONLY] Your order (ID: o-89123) has been successfully
                processed. The customer ID for this order is c-20485. It was placed
                on March 10, 2024, at 11:15 AM UTC and is now marked as shipped. The
                total amount charged is $149.99 USD. The items in this order include:
                Product ID p-00876 with a quantity of 1 at a unit price of $79.99,
                and Product ID p-00321 with a quantity of 2 at a unit price of $35.00.
                The shipping address is 782 Pine St, Austin, TX, 73301, USA. The customer
                has requested: "Leave package at the front door." Additional delivery
                preferences include no signature required and standard delivery. The
                estimated delivery date is March 15, 2024, by 5:00 PM UTC.'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InferenceResponse'
              example:
                result:
                  orderId: 'Example: o-89123'
                  customerId: 'Example: c-20485'
                  orderDate: '2024-03-10T11:15:00.000Z'
                  status: shipped
                  totalAmount: 149.99
                  currency: USD
                  items:
                  - productId: p-00876
                    quantity: 1
                    unitPrice: 79.99
                  - productId: p-00321
                    quantity: 2
                    unitPrice: 35
                  shippingAddress:
                    street: 782 Pine St
                    city: Austin
                    state: TX
                    country: USA
                    zip: '73301'
                  comments: Leave package at the front door.
                  deliveryPreferences:
                  - no_signature_required
                  - standard_delivery
                  estimatedDelivery: '2024-03-15T17:00:00.000Z'
                documentInfo:
                  type: text
                  documentId: 7285756f-3cb1-4986-a501-229744fd24d1
                  fileName: dummy_confirmation_email.txt
                  text: '[EXAMPLE ONLY] Your order (ID: o-89123) has been successfully
                    processed. The customer ID for this order is c-20485. It was placed
                    on March 10, 2024, at 11:15 AM UTC and is now marked as shipped.
                    The total amount charged is $149.99 USD. The items in this order
                    include: Product ID p-00876 with a quantity of 1 at a unit price
                    of $79.99, and Product ID p-00321 with a quantity of 2 at a unit
                    price of $35.00. The shipping address is 782 Pine St, Austin,
                    TX, 73301, USA. The customer has requested: "Leave package at
                    the front door." Additional delivery preferences include no signature
                    required and standard delivery. The estimated delivery date is
                    March 15, 2024, by 5:00 PM UTC.'
                tokens: 567
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/infer-file:
    post:
      tags:
      - inference
      description: "\n Performs information extraction inference on the provided file.\n\
        \ The file content must be compatible with the template of the project.\n\
        \ All non-image files are automatically converted to an image in the background\
        \ when possible.\n For that, a parameter **rasterizationDpi** is taken into\
        \ account. \n This parameter can be set in the project settings.\n Inference\
        \ **temperature** can be set in the project settings.\n\n\n\n#### Response:\n\
        \ Returns a json representing the inference result.\n The ***result*** field\
        \ is guaranteed to conform to the template.\n If the model returns an invalid\
        \ response, the ***result*** contains an empty template. \n In this case,\
        \ the raw response is additionally included in ***rawResponse*** field, \n\
        \ together with the error message. \n Additionally, the response contains\
        \ `documentId`, which allows to reuse this file in the future.\n    When referencing\
        \ a non-text/image file by `documentId`, only its converted image equivalents\
        \ are accessible.\n\n#### Error Responses:\n`404 Not Found` - If  a project\
        \ with the specified projectId does not exist.\n\n`403 Forbidden` - If the\
        \ user does not have permission to run inference on this project.\n   "
      operationId: postApiProjectsProjectidInfer-file
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      - name: x-file-name
        in: header
        description: The name of the file to be uploaded.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InferenceResponse'
              example:
                result:
                  orderId: 'Example: o-45762'
                  customerId: 'Example: c-39874'
                  orderDate: '2024-01-22T16:45:00.000Z'
                  status: delivered
                  totalAmount: 299.5
                  currency: USD
                  items:
                  - productId: p-00234
                    quantity: 3
                    unitPrice: 49.99
                  - productId: p-00789
                    quantity: 1
                    unitPrice: 149.53
                  shippingAddress:
                    street: 982 Birch Ln
                    city: San Diego
                    state: CA
                    country: USA
                    zip: '92103'
                  comments: Deliver to reception desk.
                  deliveryPreferences:
                  - signature_required
                  - express_shipping
                  estimatedDelivery: '2024-01-25T15:30:00.000Z'
                documentInfo:
                  type: image
                  documentId: 15eeb346-b822-4743-ac56-1a7669e8c66d
                  fileName: dummy_confirmation_email.pdf
                tokens: 897
        '400':
          description: 'Invalid value for: header x-file-name, Invalid value for:
            body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/projects/{projectId}/infer-document/{documentId}:
    post:
      tags:
      - inference
      description: "\n Performs information extraction inference on a specific document.\n\
        \ The document content must be compatible with the template of the project.\n\
        \ Inference **temperature** can be set in the project settings.\n\n#### Response:\n\
        \ The ***result*** field is guaranteed to conform to the template.\n If the\
        \ model returns an invalid response, the ***result*** contains an empty template.\
        \ \n In this case, the raw response is additionally included in ***rawResponse***\
        \ field, \n together with the error message.\n\n#### Error Responses:\n`404\
        \ Not Found` - If a document with the given documentId, or a project with\
        \ the specified projectId does not exist.\n\n`403 Forbidden` - If the user\
        \ does not have permission to use this document or run inference on this project.\n\
        \   "
      operationId: postApiProjectsProjectidInfer-documentDocumentid
      parameters:
      - name: projectId
        in: path
        description: Unique project identifier.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: Unique document identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InferenceResponse'
              example:
                result:
                  orderId: 'Example: o-89123'
                  customerId: 'Example: c-20485'
                  orderDate: '2024-03-10T11:15:00.000Z'
                  status: shipped
                  totalAmount: 149.99
                  currency: USD
                  items:
                  - productId: p-00876
                    quantity: 1
                    unitPrice: 79.99
                  - productId: p-00321
                    quantity: 2
                    unitPrice: 35
                  shippingAddress:
                    street: 782 Pine St
                    city: Austin
                    state: TX
                    country: USA
                    zip: '73301'
                  comments: Leave package at the front door.
                  deliveryPreferences:
                  - no_signature_required
                  - standard_delivery
                  estimatedDelivery: '2024-03-15T17:00:00.000Z'
                documentInfo:
                  type: text
                  documentId: 7285756f-3cb1-4986-a501-229744fd24d1
                  fileName: dummy_confirmation_email.txt
                  text: '[EXAMPLE ONLY] Your order (ID: o-89123) has been successfully
                    processed. The customer ID for this order is c-20485. It was placed
                    on March 10, 2024, at 11:15 AM UTC and is now marked as shipped.
                    The total amount charged is $149.99 USD. The items in this order
                    include: Product ID p-00876 with a quantity of 1 at a unit price
                    of $79.99, and Product ID p-00321 with a quantity of 2 at a unit
                    price of $35.00. The shipping address is 782 Pine St, Austin,
                    TX, 73301, USA. The customer has requested: "Leave package at
                    the front door." Additional delivery preferences include no signature
                    required and standard delivery. The estimated delivery date is
                    March 15, 2024, by 5:00 PM UTC.'
                tokens: 567
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
  /api/infer-template:
    post:
      tags:
      - inference
      description: "\n Derives a template from the provided natural language description.\n\
        \ Potentially, this endpoint can equally be used to correct the template to\
        \ conform to the NuExtract standard.\n The resulting template is a JSON object\
        \ that can be used as a project template.\n\n\n#### Response:\n Returns a\
        \ json representing the derived template.\n The response is an empty template\
        \ if the derivation fails.\n\n   "
      operationId: postApiInfer-template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
            example:
              description: '[EXAMPLE ONLY] Create a template that extracts key information
                from an order confirmation email. The template should be able to pull
                details like the order ID, customer ID, date and time of the order,
                status, total amount, currency, item details (product ID, quantity,
                and unit price), shipping address, any customer requests or delivery
                preferences, and the estimated delivery date.'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Obj'
              example:
                orderId: verbatim-string
                customerId: verbatim-string
                orderDate: date-time
                status:
                - pending
                - processed
                - shipped
                - delivered
                - cancelled
                totalAmount: number
                currency: string
                items:
                - productId: string
                  quantity: number
                  unitPrice: number
                shippingAddress:
                  street: string
                  city: string
                  state: string
                  country: string
                  zip: string
                comments: string
                deliveryPreferences:
                - - contactless_delivery
                  - signature_required
                  - leave_at_door
                  - pickup_from_store
                  - deliver_to_neighbor
                  - schedule_delivery
                estimatedDelivery: date-time
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - oauth2Auth:
        - openid
        - profile
        - email
components:
  schemas:
    ApiKeyResponse:
      title: ApiKeyResponse
      type: object
      required:
      - id
      - name
      - token
      - userId
      - createdAt
      - expiresAt
      properties:
        id:
          type: string
        name:
          type: string
        token:
          type: string
        userId:
          type: string
        createdAt:
          type: string
        expiresAt:
          type: string
    Arr:
      title: Arr
      type: object
      required:
      - schema
      properties:
        schema:
          $ref: '#/components/schemas/SchemaNode'
    Arr1:
      title: Arr
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/InfoNode'
    Bool:
      title: Bool
      type: object
    Bool1:
      title: Bool
      type: object
      required:
      - value
      properties:
        value:
          type: boolean
    CreateOrUpdateApiKey:
      title: CreateOrUpdateApiKey
      type: object
      required:
      - name
      properties:
        name:
          type: string
    CreateOrUpdateExampleRequest:
      title: CreateOrUpdateExampleRequest
      type: object
      required:
      - documentId
      - result
      properties:
        documentId:
          description: Unique document identifier.
          type: string
        result:
          type: object
          description: Expected inference result.
    CreateOrUpdatePlaygroundItemRequest:
      title: CreateOrUpdatePlaygroundItemRequest
      type: object
      required:
      - documentId
      - result
      properties:
        ownerOrganization:
          description: Project owning organization (optional).
          type: string
        documentId:
          description: Unique document identifier.
          type: string
        result:
          type: object
          description: Inference result.
    CreateProjectRequest:
      title: CreateProjectRequest
      type: object
      required:
      - name
      - description
      - template
      properties:
        name:
          description: Project name.
          type: string
        description:
          description: A brief explanation of the project.
          type: string
        template:
          type: object
          description: Extraction template (NuExtract format).
        ownerOrganization:
          description: Project owning organization (optional).
          type: string
    Datetime:
      title: Datetime
      type: object
    DocumentInfo:
      title: DocumentInfo
      oneOf:
      - $ref: '#/components/schemas/ImageInfo'
      - $ref: '#/components/schemas/TextInfo'
      discriminator:
        propertyName: type
        mapping:
          image: '#/components/schemas/ImageInfo'
          text: '#/components/schemas/TextInfo'
    DocumentResponse:
      title: DocumentResponse
      type: object
      required:
      - docInfo
      - ownerUser
      - originalContentType
      - contentType
      - createdAt
      - updatedAt
      - shared
      properties:
        docInfo:
          $ref: '#/components/schemas/DocumentInfo'
          description: Basic document information.
        ownerUser:
          description: Document owner.
          type: string
        ownerOrganization:
          description: Document owning organization (if any).
          type: string
        originalContentType:
          description: Mime type of the original file.
          type: string
        contentType:
          description: Mime type of the converted document.
          type: string
        createdAt:
          description: Document creation date.
          type: string
        updatedAt:
          description: Document last update date.
          type: string
        shared:
          description: The shared state of the document.
          type: boolean
    Enum:
      title: Enum
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    Error:
      title: Error
      type: object
      required:
      - code
      - message
      properties:
        code:
          type: string
        message:
          type: string
    ExampleResponse:
      title: ExampleResponse
      type: object
      required:
      - id
      - projectId
      - ownerUser
      - documentInfo
      - result
      - createdAt
      - updatedAt
      properties:
        id:
          description: Unique example identifier.
          type: string
        projectId:
          description: Unique project identifier.
          type: string
        ownerUser:
          description: Example owner.
          type: string
        documentInfo:
          $ref: '#/components/schemas/DocumentInfo'
          description: Basic information on the document used to create this example.
        result:
          $ref: '#/components/schemas/InformationResponse'
          description: Expected inference result.
        createdAt:
          description: Example creation date.
          type: string
        updatedAt:
          description: Example last update date.
          type: string
    HealthResponse:
      title: HealthResponse
      type: object
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceStatus'
    ImageInfo:
      title: ImageInfo
      type: object
      required:
      - documentId
      - fileName
      - type
      properties:
        documentId:
          description: Unique document identifier.
          type: string
        fileName:
          description: Filename of the initial file.
          type: string
        type:
          type: string
          const: image
    InferenceResponse:
      title: InferenceResponse
      type: object
      required:
      - result
      - documentInfo
      - tokens
      properties:
        result:
          type: object
          description: Inference result conforming to the template.
        rawResult:
          $ref: '#/components/schemas/RawResult'
        documentInfo:
          $ref: '#/components/schemas/DocumentInfo'
          description: Basic information on the document used for inference.
        tokens:
          description: Total number of tokens used for inference (input + output).
          type: integer
          format: int64
    InfoNode:
      title: InfoNode
      oneOf:
      - $ref: '#/components/schemas/Arr1'
      - $ref: '#/components/schemas/Bool1'
      - $ref: '#/components/schemas/Null'
      - $ref: '#/components/schemas/Num1'
      - $ref: '#/components/schemas/Obj1'
      - $ref: '#/components/schemas/Str1'
    InformationResponse:
      title: InformationResponse
      oneOf:
      - $ref: '#/components/schemas/InvalidInformation'
      - $ref: '#/components/schemas/ValidInformation'
      discriminator:
        propertyName: type
        mapping:
          information: '#/components/schemas/ValidInformation'
          string: '#/components/schemas/InvalidInformation'
    Integer:
      title: Integer
      type: object
    InvalidInformation:
      title: InvalidInformation
      type: object
      required:
      - information
      - error
      - type
      properties:
        information:
          description: "Inference result not conforming to the template.   \n   This\
            \ is the raw response from the model."
          type: string
        error:
          description: Error message explaining why the inference result is invalid.
          type: string
        type:
          type: string
          const: string
    InvalidSchema:
      title: InvalidSchema
      type: object
      required:
      - schema
      - error
      - type
      properties:
        schema:
          type: string
        error:
          type: string
        type:
          type: string
          const: string
    Map_V:
      title: Map_V
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SchemaNode'
    MultiEnum:
      title: MultiEnum
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    'Null':
      title: 'Null'
      type: object
    Num:
      title: Num
      type: object
    Num1:
      title: Num
      type: object
      required:
      - value
      properties:
        value:
          type: number
          format: double
    Obj:
      title: Obj
      type: object
      required:
      - schemas
      properties:
        schemas:
          $ref: '#/components/schemas/Map_V'
    Obj1:
      title: Obj
      type: object
      required:
      - schemas
      properties:
        schemas:
          $ref: '#/components/schemas/Map_V'
    PlaygroundItemResponse:
      title: PlaygroundItemResponse
      type: object
      required:
      - id
      - projectId
      - ownerUser
      - documentInfo
      - result
      - createdAt
      - updatedAt
      properties:
        id:
          description: Unique playground item identifier.
          type: string
        projectId:
          description: Unique project identifier.
          type: string
        ownerUser:
          description: Playground item owner.
          type: string
        documentInfo:
          $ref: '#/components/schemas/DocumentInfo'
          description: Basic information on the document used for inference.
        result:
          $ref: '#/components/schemas/InformationResponse'
          description: Inference result.
        createdAt:
          description: Playground item creation date.
          type: string
        updatedAt:
          description: Playground item last update date.
          type: string
    ProjectResponse:
      title: ProjectResponse
      type: object
      required:
      - id
      - name
      - description
      - template
      - ownerUser
      - createdAt
      - updatedAt
      - lockState
      - shared
      - settings
      properties:
        id:
          description: Unique project identifier.
          type: string
        name:
          description: Project name.
          type: string
        description:
          description: A brief explanation of the project.
          type: string
        template:
          type: object
        ownerUser:
          description: Project owner.
          type: string
        ownerOrganization:
          description: Project owning organization (if any).
          type: string
        createdAt:
          description: Project creation date.
          type: string
        updatedAt:
          description: Project last update date.
          type: string
        lockState:
          description: The lock state of the project.
          type: boolean
        shared:
          description: The shared state of the project.
          type: boolean
        settings:
          $ref: '#/components/schemas/ProjectSettingsResponse'
    ProjectSettingsResponse:
      title: ProjectSettingsResponse
      description: Project settings.
      type: object
      required:
      - temperature
      - rasterizationDpi
      properties:
        temperature:
          description: The temperature to use for inference.
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
        rasterizationDpi:
          description: Rasterization DPI used during file to image conversion.
          type: integer
          format: int32
          exclusiveMinimum: 0
          maximum: 300
    RawResult:
      title: RawResult
      description: Inference result if not conforming to the template.
      type: object
      required:
      - result
      - error
      properties:
        result:
          description: Inference result not conforming to the template.
          type: string
        error:
          description: Error message explaining why the inference result is invalid.
          type: string
    SchemaNode:
      title: SchemaNode
      oneOf:
      - $ref: '#/components/schemas/Arr'
      - $ref: '#/components/schemas/Bool'
      - $ref: '#/components/schemas/Datetime'
      - $ref: '#/components/schemas/Enum'
      - $ref: '#/components/schemas/Integer'
      - $ref: '#/components/schemas/MultiEnum'
      - $ref: '#/components/schemas/Num'
      - $ref: '#/components/schemas/Obj'
      - $ref: '#/components/schemas/Str'
      - $ref: '#/components/schemas/VerbatimStr'
    SchemaResponse:
      title: SchemaResponse
      description: Extraction template (NuExtract format).
      oneOf:
      - $ref: '#/components/schemas/InvalidSchema'
      - $ref: '#/components/schemas/ValidSchema'
      discriminator:
        propertyName: type
        mapping:
          schema: '#/components/schemas/ValidSchema'
          string: '#/components/schemas/InvalidSchema'
    ServiceStatus:
      title: ServiceStatus
      type: object
      required:
      - name
      - status
      properties:
        name:
          type: string
        status:
          type: string
        count:
          type: integer
          format: int32
    Str:
      title: Str
      type: object
    Str1:
      title: Str
      type: object
      required:
      - value
      properties:
        value:
          type: string
    TemplateRequest:
      title: TemplateRequest
      type: object
      required:
      - description
      properties:
        description:
          description: Free-format template description.
          type: string
    TextInfo:
      title: TextInfo
      type: object
      required:
      - documentId
      - text
      - type
      properties:
        documentId:
          description: Unique document identifier.
          type: string
        fileName:
          description: "Filename of the initial file if any.  \n  **None** for text\
            \ input."
          type: string
        text:
          description: The text content of the document.
          type: string
        type:
          type: string
          const: text
    TextRequest:
      title: TextRequest
      type: object
      required:
      - text
      properties:
        text:
          description: The text to extract from.
          type: string
    TokenCodeRequest:
      title: TokenCodeRequest
      type: object
      required:
      - code
      - redirectUri
      - type
      properties:
        code:
          type: string
        redirectUri:
          type: string
        type:
          type: string
          const: ai.numind.extract.shared.TokenCodeRequest
    TokenRefreshRequest:
      title: TokenRefreshRequest
      type: object
      required:
      - token
      - type
      properties:
        token:
          type: string
        type:
          type: string
          const: ai.numind.extract.shared.TokenRefreshRequest
    TokenRequest:
      title: TokenRequest
      oneOf:
      - $ref: '#/components/schemas/TokenCodeRequest'
      - $ref: '#/components/schemas/TokenRefreshRequest'
      discriminator:
        propertyName: type
        mapping:
          ai.numind.extract.shared.TokenCodeRequest: '#/components/schemas/TokenCodeRequest'
          ai.numind.extract.shared.TokenRefreshRequest: '#/components/schemas/TokenRefreshRequest'
    TokenResponse:
      title: TokenResponse
      type: object
      required:
      - token
      - expiresIn
      properties:
        token:
          type: string
        expiresIn:
          type: integer
          format: int32
        refreshToken:
          type: string
        refreshExpiresIn:
          type: integer
          format: int32
    UpdateProjectRequest:
      title: UpdateProjectRequest
      type: object
      properties:
        name:
          description: Project name (optional).
          type: string
        description:
          description: A brief explanation of the project (optional).
          type: string
        template:
          type: object
          description: Extraction template (NuExtract format) (optional).
    UpdateProjectSettingsRequest:
      title: UpdateProjectSettingsRequest
      type: object
      properties:
        temperature:
          description: The temperature to use for inference (optional).
          type: number
          format: double
          minimum: 0.0
          maximum: 1.0
        rasterizationDpi:
          description: Rasterization DPI used during file to image conversion (optional).
          type: integer
          format: int32
          exclusiveMinimum: 0
          maximum: 300
    User:
      title: User
      type: object
      required:
      - email
      - isAdmin
      properties:
        email:
          type: string
        isAdmin:
          type: boolean
    ValidInformation:
      title: ValidInformation
      type: object
      required:
      - information
      - type
      properties:
        information:
          $ref: '#/components/schemas/Obj1'
          description: Inference result conforming to the template.
        type:
          type: string
          const: information
    ValidSchema:
      title: ValidSchema
      type: object
      required:
      - schema
      - type
      properties:
        schema:
          $ref: '#/components/schemas/Obj'
        type:
          type: string
          const: schema
    VerbatimStr:
      title: VerbatimStr
      type: object
    VersionResponse:
      title: VersionResponse
      type: object
      required:
      - name
      - buildVersion
      - buildBranch
      - buildTime
      properties:
        name:
          type: string
        buildVersion:
          type: string
        buildBranch:
          type: string
        buildTime:
          type: string
  securitySchemes:
    oauth2Auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://users.numind.ai/realms/extract-platform/protocol/openid-connect/auth
          tokenUrl: https://users.numind.ai/realms/extract-platform/protocol/openid-connect/token
          refreshUrl: https://users.numind.ai/realms/extract-platform/protocol/openid-connect/token
          scopes:
            openid: OpenID connect
            profile: view profile
            email: view email
